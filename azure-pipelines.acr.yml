pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  batch: true
  branches:
    include: 
    - refs/heads/*
  paths:
    include: 
    - johnsommerville.com/

variables:
  projectName: johnsommerville.com
  registryServerName: '$(registryName).azurecr.io'
  imageName: '$(projectName)'
  # define 4 more variables: tenantId, registryName, registryLogin and registryPassword in the build pipeline in UI


steps:
- bash: docker build -f $(system.defaultWorkingDirectory)/$(projectName)/Dockerfile -t $(imageName):$(build.buildId) -t $(imageName):latest $(system.defaultWorkingDirectory)/$(projectName)
  displayName: 'docker build'

  #Login and push for Azure
- bash: docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
  displayName: 'docker login (Azure)'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

- bash: |
    docker push $(imageName):$(build.buildId)
    docker push $(imageName):latest
  displayName: 'docker push (Azure)'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

- task: HelmInstaller@0
  displayName: 'Install Helm'
  inputs:
    helmVersion: 2.13.0

- bash: helm package --version $(build.buildId) --destination $(build.artifactStagingDirectory) $(system.defaultWorkingDirectory)/$(projectName)/charts/$(chartName)
  displayName: 'helm package'
  
  #Push Helm charts to Azure
- bash: az login --service-principal -u $(registryLogin) -p $(registryPassword) -t $(tenantId)
  displayName: 'az login'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

- bash: az acr helm push -n $(registryName) $(build.artifactStagingDirectory)/$(chartName)-$(build.buildId).tgz
  displayName: 'az acr helm push'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))